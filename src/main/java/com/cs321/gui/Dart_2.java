package com.cs321.gui;

import com.cs321.core.DartboardUtils;
import static com.cs321.core.DartboardUtils.coordsToScore;
import static com.cs321.core.DartboardUtils.getTotalScore;
import com.cs321.core.GameConfiguration;
import com.cs321.core.GameManager;
import com.cs321.core.Round;
import com.cs321.core.Team;
import com.cs321.gui.DartDashGUI;
import com.cs321.gui.GUIState;
import com.cs321.gui.UpdateableJPanel;
import java.awt.LayoutManager;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import javax.swing.border.Border;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 * Dart Gui. Empty file for dart display.
 *
 * @author guero
 */
public class Dart_2 extends UpdateableJPanel {

    private GUIState state;
    HashMap<Integer, Integer> PlayerResults1;
    /**
     * Total round score.
     */
    private int totalRoundScore = 0;
    /**
     * current throw score.
     */
    private int throwScore = 0;
    /**
     * how many throws happened.
     */
    private int throwRounds = 0;
    /**
     * actual round.
     */
    private int round = 0; //
    /**
     * how many scores were confirmed.
     */
    private int confirmed = 0;
    String teamA = null;
    String teamB = null;
    private int MaximumRounds = 0;
    /**
     * Throws allowed per round.
     */
    private int dartsPerRound = 3; ///done 
    float[] multipliers;
    int OffboardPenalty = 0;
    int[] scoreList = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 50};//done 
    int startingScore = 30;
    String id = null;
    int xMouse = 0;
    int yMouse = 0;
    int xDart = 0;
    int yDart = 0;
    int dartArrowintX = 0;
    int dartArrowintY = 0;
    DartboardUtils util;
    Team [] teams;
    List <Team> teamList; 
    Round roundFile ;
    ArrayList <Integer> throwScoreList; 
    

    GameManager manager;
     GameConfiguration gameMode;

    /**
     * Creates new form Dart
     */
    public Dart_2(GUIState state) {
        initComponents();
        this.state = state;
        
       // manager = state.gameManager;
       
        //  state.contentPane.add("Dart_2", this);
        //util = new DartboardUtils();
         
        dartArrowintX = dartArrow.getX();
        dartArrowintY = dartArrow.getY();
        throwScoreList = new ArrayList(); 
        
       

    }
    @Override
   public void updateComponents(){

     manager = state.gameManager;
      manager.beginRound();
    
     gameConfig();
    // teams = manager.getTeamsManager().getTeams();
   
     teamList= Arrays.asList(manager.getTeamsManager().getTeams());
     ///ArrayList<Team> list = new ArrayList<Team>(Arrays.asList(manager.getTeamsManager().getTeams()));
     setGameGui();
      
     
    

}

    protected void gameConfig() {
         gameMode = manager.getGameConfiguration();
        //this.gameMode = gameMode;
        MaximumRounds = gameMode.getMaximumRounds();
        dartsPerRound = gameMode.getDartsPerRound();
        id = gameMode.getId();//string
        multipliers = gameMode.getMultipliers();//float.
        OffboardPenalty = gameMode.getOffboardPenalty();//int
        scoreList = gameMode.getScoreList();//array of ints 
        startingScore = gameMode.getStartingScore(); //int

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        totalTeamsNumber = new java.awt.Label();
        label2 = new java.awt.Label();
        totalTeamsNumberValue = new java.awt.Label();
        nextTeam = new java.awt.Label();
        nextTeamValue = new java.awt.Label();
        label5 = new java.awt.Label();
        startingScoreBoxValue = new java.awt.Label();
        roundBox = new java.awt.Label();
        roundValueBox = new java.awt.Label();
        throwBox = new java.awt.Label();
        throwBoxValue = new java.awt.Label();
        throwScoreBox = new javax.swing.JLabel();
        throwScoreBoxValue = new java.awt.Label();
        roundScoreBox = new javax.swing.JLabel();
        roundScoreBoxValue = new java.awt.Label();
        playingTeamBox = new javax.swing.JLabel();
        playingTeamBoxValue = new java.awt.Label();
        playerNameBox = new javax.swing.JLabel();
        playerNameBoxValue = new java.awt.Label();
        QuitToMainMenuButton = new java.awt.Button();
        undoThrowButton = new java.awt.Button();
        confirmNowButton = new java.awt.Button();
        changingLightsBoardPanel = new javax.swing.JPanel();
        dartBoardPicture = new javax.swing.JLabel();
        dartArrow = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1, 1));
        setPreferredSize(new java.awt.Dimension(640, 480));

        totalTeamsNumber.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        totalTeamsNumber.setText("Total Playing Teams ");

        label2.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        label2.setForeground(new java.awt.Color(102, 102, 102));
        label2.setText("Required Score: ");

        totalTeamsNumberValue.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        totalTeamsNumberValue.setText("A -34");

        nextTeam.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        nextTeam.setText("Next Team: ");

        nextTeamValue.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        nextTeamValue.setText("B-57");

        label5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label5.setText("__________________________________________________________________________________________________________");

        startingScoreBoxValue.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        startingScoreBoxValue.setForeground(new java.awt.Color(102, 102, 102));
        startingScoreBoxValue.setText("0");

        roundBox.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        roundBox.setText("Round");

        roundValueBox.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        roundValueBox.setText("1");

        throwBox.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        throwBox.setText("Throw");

        throwBoxValue.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        throwBoxValue.setText("1/3");

        throwScoreBox.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        throwScoreBox.setForeground(new java.awt.Color(153, 0, 153));
        throwScoreBox.setText("Throw Score: ");

        throwScoreBoxValue.setText("label1");

        roundScoreBox.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        roundScoreBox.setForeground(new java.awt.Color(204, 0, 51));
        roundScoreBox.setText("Round Score: ");

        roundScoreBoxValue.setText("label1");

        playingTeamBox.setBackground(new java.awt.Color(204, 0, 51));
        playingTeamBox.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        playingTeamBox.setForeground(new java.awt.Color(204, 0, 51));
        playingTeamBox.setText("Playing Team: ");

        playingTeamBoxValue.setText("label2");

        playerNameBox.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        playerNameBox.setForeground(new java.awt.Color(204, 0, 51));
        playerNameBox.setText("Player's name: ");

        playerNameBoxValue.setText("label4");

        QuitToMainMenuButton.setBackground(new java.awt.Color(204, 255, 204));
        QuitToMainMenuButton.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        QuitToMainMenuButton.setLabel("Quit to Main Menu");
        QuitToMainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitToMainMenuButtonActionPerformed(evt);
            }
        });

        undoThrowButton.setBackground(new java.awt.Color(204, 255, 204));
        undoThrowButton.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        undoThrowButton.setLabel("Undo Throw");
        undoThrowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                undoThrowButtonMouseClicked(evt);
            }
        });
        undoThrowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoThrowButtonActionPerformed(evt);
            }
        });

        confirmNowButton.setBackground(new java.awt.Color(204, 255, 204));
        confirmNowButton.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        confirmNowButton.setLabel("Confirm Throw");
        confirmNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmNowButtonActionPerformed(evt);
            }
        });

        dartBoardPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dartBoardPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dartboard_200x200.png"))); // NOI18N
        dartBoardPicture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dartBoardPictureMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout changingLightsBoardPanelLayout = new javax.swing.GroupLayout(changingLightsBoardPanel);
        changingLightsBoardPanel.setLayout(changingLightsBoardPanelLayout);
        changingLightsBoardPanelLayout.setHorizontalGroup(
            changingLightsBoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changingLightsBoardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dartBoardPicture)
                .addGap(40, 40, 40))
        );
        changingLightsBoardPanelLayout.setVerticalGroup(
            changingLightsBoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changingLightsBoardPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(dartBoardPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        dartArrow.setBackground(new java.awt.Color(255, 51, 51));
        dartArrow.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dartArrow.setForeground(new java.awt.Color(255, 51, 51));
        dartArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dart_1_10.png"))); // NOI18N
        dartArrow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dartArrowMouseDragged(evt);
            }
        });
        dartArrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dartArrowMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dartArrowMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(totalTeamsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalTeamsNumberValue, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextTeamValue, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playingTeamBox)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roundBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roundValueBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(roundScoreBox)
                            .addComponent(playerNameBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(throwScoreBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(throwScoreBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(undoThrowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(confirmNowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playerNameBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roundScoreBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(playingTeamBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dartArrow))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(changingLightsBoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(throwBox, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(throwBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(startingScoreBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(QuitToMainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startingScoreBoxValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalTeamsNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalTeamsNumberValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextTeam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextTeamValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(throwScoreBox)
                            .addComponent(throwScoreBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roundBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roundValueBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(throwBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(roundScoreBox)
                                    .addComponent(roundScoreBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(playingTeamBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(playerNameBox))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(playingTeamBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(playerNameBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(63, 63, 63)
                                .addComponent(dartArrow))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(changingLightsBoardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(throwBoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(QuitToMainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(undoThrowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmNowButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void QuitToMainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitToMainMenuButtonActionPerformed
        // TODO add your handling code here:

        // DartDashGUI gui = new DartDashGUI();
        //.setVisible(true);
        //gui.dispose();
        //this.dispose();
        //jPanel1.setVisible(false);
        //state.contentPaneCardLayout.show(state.contentPane, "MainMenuPanel");
        // state.contentPaneCardLayout.show(state.contentPane, "ViewGamemodesPanel");
        state.contentPaneCardLayout.show(state.contentPane, GUIState.PanelName.MainMenuPanel.toString());
    }//GEN-LAST:event_QuitToMainMenuButtonActionPerformed

    private void undoThrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoThrowButtonActionPerformed
        // TODO add your handling code here:


                        
        
    }//GEN-LAST:event_undoThrowButtonActionPerformed

    private void confirmNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmNowButtonActionPerformed
        // TODO add your handling code here:s
        System.out.println("round : "+ round + " MaximimRounds "+ MaximumRounds);
       
//        if (throwRounds > dartsPerRound || throwRounds < 0 || confirmed > dartsPerRound-1 || throwScore == 0) {
//           // if (round == MaximumRounds)
//            {
//                
//                javax.swing.JOptionPane.showMessageDialog(null, "ROUND IS FINISHED!  ", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
//            
//
//          return; 
//          
//          }
           
 
       // }  
    if (manager.isGameFinished()){
           javax.swing.JOptionPane.showMessageDialog(null, "GAME OVER!  ", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            }
        
        // setPanel2Color(changingLightsBoardPanel);////changes panel's color for fun. 
        manager.progressRound(throwScore);
        
        
        
        throwRounds += 1;
        String s = throwRounds + "/" + dartsPerRound;
        throwBoxValue.setText(s);
        startingScore -= throwScore;// updates in a decrementing way the starting score when a throw happnes. 
        startingScoreBoxValue.setText(startingScore+"");
        
        totalRoundScore += throwScore;/// updates in an incrementing way the total score in a round. 
        
        throwScoreList.add(throwScore); ////add to the array []
        throwScore = 0;
        throwScoreBoxValue.setText(throwScore + "");

        roundScoreBoxValue.setText(totalRoundScore + "");
        confirmed += 1;
        //confimredLast = true;
       
       // manager.getRoundsManager().addRound(round);
        //round++;        resetDartArrowLocation();

        
        // if (manager.isGameFinished())
        System.out.println("confimred : "+ confirmed + " dartsPerRound "+dartsPerRound );
        
         ///if (confirmed == dartsPerRound){
         
         if (manager.isRoundFinished()){

   
          
       //  int [] array=  throwScoreList.stream().mapToInt(i -> i).toArray();
//         roundFile = new Round(manager.getCurrentPlayer()); 
//         roundFile.setScores(scoreList);
//         roundFile.addScore(totalRoundScore);
             ////System.out.println("mmmmmmmmmmmmmmmmmmmm\n"+ roundFile.getTotalThrows());//tetsting 
             
       
         
//         manager.getRoundsManager().addRound(roundFile);
//             System.out.println("round is finished ?: "+manager.isRoundFinished() );
             
             
//         if (manager.isRoundFinished())////////this is returning false ????
         {
         
          manager.beginRound();
          resetRound();
         }
        
        }


    }//GEN-LAST:event_confirmNowButtonActionPerformed

    private void dartBoardPictureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dartBoardPictureMouseClicked

        if (throwRounds > dartsPerRound - 1) {
            javax.swing.JOptionPane.showMessageDialog(null, "You completed all Throws ", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (throwRounds == 0) {
            // manager.beginRound();
        }
        //manager.beginRound(); 
        int y = dartBoardPicture.getHorizontalAlignment();
        int x = dartBoardPicture.getHorizontalAlignment();

        x = evt.getXOnScreen() - xMouse;
        y = evt.getYOnScreen() - yMouse;
//int newX = dartBoardPicture.getX()+x / 40;
//int newY = dartBoardPicture.getY() + y / 40;
        int newX = x;
        int newY = y;
        dartArrow.setLocation(newX, newY);

//olf
      float coorX = evt.getX()/ (float)dartBoardPicture.getWidth(); 
       float coorY = evt.getY()/ (float)dartBoardPicture.getHeight();
       
        System.out.println("coorX "+ coorX + " coorY" + coorY);
       
         int score = getTotalScore(coorX, coorY, manager.getGameConfiguration());
        //int sam= manager.progressRound(dartArrow.getAlignmentX(),dartArrow.getAlignmentY() ); 
        ///int sam = coordsToScore(dartArrow.getAlignmentX(), dartArrow.getAlignmentY());
        //System.out.println("sam: " + sam);

        //Random rand = new Random();
        //int score = rand.nextInt(scoreList.length - 1);
        System.out.println("getx : "+ evt.getX() +"gety "+ evt.getY());
        System.out.println("score: " + score);
        //throwScore = scoreList[score];
        throwScore= score; 
        

        throwScoreBoxValue.setText(throwScore + "");


    }//GEN-LAST:event_dartBoardPictureMouseClicked

    private void dartArrowMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dartArrowMouseDragged
        int x = evt.getXOnScreen() - xMouse;
        int y = evt.getYOnScreen() - yMouse;
        int newX = dartArrow.getX() + x / 40;
        int newY = dartArrow.getY() + y / 40;
//int newX = dartBoardPicture.getX();
//int newY = dartBoardPicture.getY()+y ;

        dartArrow.setLocation(newX, newY);
    }//GEN-LAST:event_dartArrowMouseDragged

    private void dartArrowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dartArrowMouseClicked


    }//GEN-LAST:event_dartArrowMouseClicked

    private void dartArrowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dartArrowMousePressed
        // TODO add your handling code here:
        xMouse = evt.getXOnScreen();
        yMouse = evt.getYOnScreen();

    }//GEN-LAST:event_dartArrowMousePressed

    private void undoThrowButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_undoThrowButtonMouseClicked
        // TODO add your handling code here:
        if ((throwRounds == 0 && throwScore == 0) || confirmed > dartsPerRound-1 || throwScore == 0) {  ///this is debatable, since I think throws are going to be controllded by the game's manager's control flow. 
            javax.swing.JOptionPane.showMessageDialog(null, "You cannot undo a throw ", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            return;

            //throwRounds=0;
        }

        // setPanel2Color(changingLightsBoardPanel);////changes panel's color for fun. 
        throwScore = 0;
        /*throwRounds -= 1;
        if (throwRounds < 0){
        throwRounds =0; 
        }*/
        throwScoreBoxValue.setText("0");

        String s = throwRounds + "/" + dartsPerRound;
        throwBoxValue.setText(s);
        roundScoreBoxValue.setText(totalRoundScore + "");

        resetDartArrowLocation(); ///resets dart location. 
    }//GEN-LAST:event_undoThrowButtonMouseClicked

    /**
     * Method to reset dart to initial location.
     */
    private void resetDartArrowLocation() {
        dartArrow.setLocation(dartArrowintX, dartArrowintY);/////////////

    }
    
    
    /**
     * methos to rest round's gui values. 
     */
    private void resetRound(){
         round+=1; 
          // roundValueBox.setText(teamA);
//         if (teamList.size()> 0)
//          {
//              
//          teamList.remove(0);///reund+=1; moves the first player. 
//     
//          }
          
         startingScore = gameMode.getStartingScore(); //int
         totalRoundScore= 0; 
         throwRounds= 0; 
         confirmed = 0; 
          setGameGui();
    
    
    }

    public void setGameGui() {

     
       totalTeamsNumberValue.setText(teamList.size()+"");
       if (teamList != null && teamList.size()>1)
       {
        nextTeamValue.setText(teamList.get(1).getName());// sets teamB name. 
       }else {
           nextTeamValue.setText("N/A");// sets teamB name
       
       }
        
        //roundValueBox.setText(round+"");// shows round number. 
        roundValueBox.setText(manager.getRoundsManager().getTotalRounds()+"");
        playingTeamBoxValue.setText(manager.getCurrentTeam().getName());///displays the current team. 
         
        
        playerNameBoxValue.setText(manager.getCurrentPlayer().getName());////displays the current player. 
        
        roundScoreBoxValue.setText(totalRoundScore+"");/// displays total round score. 
               
        String s = throwRounds+"/";  
        s+= dartsPerRound;   
        throwBoxValue.setText(s);//displays the throw value such as 0/3
        
        
        startingScoreBoxValue.setText(startingScore + "");///displays  the starting score. 
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button QuitToMainMenuButton;
    private javax.swing.JPanel changingLightsBoardPanel;
    private java.awt.Button confirmNowButton;
    private javax.swing.JLabel dartArrow;
    private javax.swing.JLabel dartBoardPicture;
    private java.awt.Label label2;
    private java.awt.Label label5;
    private java.awt.Label nextTeam;
    public java.awt.Label nextTeamValue;
    private javax.swing.JLabel playerNameBox;
    public java.awt.Label playerNameBoxValue;
    private javax.swing.JLabel playingTeamBox;
    public java.awt.Label playingTeamBoxValue;
    private java.awt.Label roundBox;
    private javax.swing.JLabel roundScoreBox;
    protected java.awt.Label roundScoreBoxValue;
    public java.awt.Label roundValueBox;
    private java.awt.Label startingScoreBoxValue;
    private java.awt.Label throwBox;
    public java.awt.Label throwBoxValue;
    private javax.swing.JLabel throwScoreBox;
    private java.awt.Label throwScoreBoxValue;
    private java.awt.Label totalTeamsNumber;
    public java.awt.Label totalTeamsNumberValue;
    private java.awt.Button undoThrowButton;
    // End of variables declaration//GEN-END:variables

}
